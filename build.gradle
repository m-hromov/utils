plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}


group = "io.github.m-hromov"
archivesBaseName = "utils"
version = '1.3.5'

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Utils135',
                'Implementation-Version': version
    }
    with jar
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'io.github.m-hromov'
            artifactId = 'utils'
            version = '1.3.5'
            pom {
                name = 'utils'
                description = 'utils'
                url = 'https://github.com/m-hromov/utils'

                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mhromov'
                        name = 'Maksym Hromov'
                        email = 'mgromov095@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/m-hromov/utils.git'
                    developerConnection = 'scm:git:ssh://github.com/m-hromov/utils.git'
                    url = 'https://github.com/m-hromov/utils'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = '***'
                password = '***'
            }
        }
    }
}


signing {
    sign publishing.publications.mavenJava
}

signing {
    useInMemoryPgpKeys('***','***')
}